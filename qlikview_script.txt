SET ThousandSep=' ';
SET DecimalSep=',';
SET MoneyThousandSep=' ';
SET MoneyDecimalSep=',';
SET MoneyFormat='# ##0,00р.;-# ##0,00р.';
SET TimeFormat='h:mm:ss';
SET DateFormat='DD.MM.YYYY';
SET TimestampFormat='DD.MM.YYYY h:mm:ss[.fff]';
SET MonthNames='янв;фев;мар;апр;май;июн;июл;авг;сен;окт;ноя;дек';
SET DayNames='Пн;Вт;Ср;Чт;Пт;Сб;Вс';


Let STARTDATE = Num(MakeDate(2015, 01, 01));
Let ENDDATE = num(Floor(/*monthend*/(Now())))+1;
SET DateFormat='YYYY-MM-DD';
[TEMP_DATE]:
LOAD
    Date($(STARTDATE) + IterNo() - 1, '$(DateFormat)') as Date AUTOGENERATE 1
    WHILE $(STARTDATE)+IterNo()-1<= $(ENDDATE);

[DATETABLE]:
LOAD
Date as date,
Year(Date) as ONLYYEAR,
YearName(Date,0,4) as YEAR, //YEAR STARTS WITH APR
Month(Date) as MONTH,
Month(Date) & ' '& year(Date) as MMYYYY,
num(Month(Date)) as MONTHID,
if(Date = MonthEnd(Date), Month(Date), '') as MONTH_ON_ENDDATE,
Day(Date) as DAY,
Day(Date) & Month(Date)  as DDMM,
QuarterName(QuarterStart(Date,0,4)) as QuarterName
RESIDENT [TEMP_DATE];

DROP TABLE [TEMP_DATE];

CALENDAR:
LOAD *,
if(WildMatch(QuarterName,'Apr*'),'Q1',
if(WildMatch(QuarterName,'Jul*'),'Q2',
if(WildMatch(QuarterName,'Oct*'),'Q3',
if(WildMatch(QuarterName,'Jan*'),'Q4')))) as Quarter,
AutoNumber(QuarterName) as QID,
if(MONTH>8,ONLYYEAR & '-' & (ONLYYEAR+1),(ONLYYEAR-1) & '-' & ONLYYEAR) as school_year

Resident [DATETABLE];

DROP Table [DATETABLE];

ODBC CONNECT TO [QV-DWH];

moid:
SQL SELECT 
      id as moID
      ,[name] as MO_name
      ,[ratingmo_pokazatel]
      ,[admTyumen_id]
 
      ,[detsad_id]
      ,[detsad_alg_flag]
       ,map_id as ID
    ,control_unit_id
      
FROM [AnalitDB].[dbo].[_Dict_MO];


Units:
SQL SELECT 
 [unitID]
      ,[moID]
      ,[unitName]    
      ,[unitStatus]
      ,[private]
      ,[Okrug]
      ,[pupil_count]
      ,[place_count]
FROM AnalitDB.edu.v_KG_Unit;

Units_max_count:
SQL SELECT
	date,
	count_index,
    unit_count,
    unit_id as unitID
from AnalitDB.edu.KG_Unit_max_count;



Child_groups:
SQL SELECT date,
    "child_visitng" as g_child_visiting,
    "group_id",
    "unit_id" as unitID,
    "age_cat_id" as age_cat_id_cv,
    "max_count",
    "free_places",
    "work_type_id" as gst_id
FROM AnalitDB.edu."KG_Children_visitng";

Child_groups1:
SELECT  [id] as age_cat_id_cv
            ,[name] as name_age_cat_id_cv
FROM [AnalitDB].[edu].[KG_AgeCategories];


Child_ages:
SQL SELECT date,
      child_visitng as child_visitng_a,
      unit_id as unitID,
      age_cat_id as age_cat_id_a,
      [age] as age_a
FROM AnalitDB.edu."KG_Children_visitng_by_age";


Child_age1:
SELECT  [id] as age_cat_id_a
            ,[name] as name_age_cat_id_a
FROM [AnalitDB].[edu].[KG_AgeCategories];

Child_change1:
SQL SELECT  [date]
      ,[child_cnt] as child_change1
      ,[unit_id] as unitID
  FROM [AnalitDB].[edu].[v_KG_Children_change_fd];
  

Child_change:
SQL SELECT date,
      child_cnt as change_cnt,
      unit_id as unitID,
      age as age_change
FROM AnalitDB.edu."KG_Child_change_by_age";


Child_quene:
SQL SELECT date,
      child_id as child_quene_id,
      unit_id as unitID,
      birthdate,
      create_date,
      priv_status,
      age,
      age_by_create_declaration_day,
      age_month
FROM AnalitDB.edu."KG_Child_quene_by_age"
where [date] >= '2019-12-31';


Child_quene_fdm:
SQL Select date,
      unit_id as unitID,
      child_quene_cnt,
      pref_date_year,
      pref_date_month,
      age as age_fdm
FROM AnalitDB.edu.v_KG_Children_quene_first_day
where [date] >= '2019-12-31';



Child_quene_status_fdm:
SQL SELECT  [date]
  //    ,[base_date] 
      ,[unit_id]  as unitID
      ,[child_cnt] as child_cnt_fdm
  //   ,[pref_date_year] as pdy_fdm
  //    ,[pref_date_month] as pdm_fdm
      ,age_status as age_fdm_1
      ,[q_status] as q_status_fdm
  FROM [AnalitDB].[edu].[KG_quene_stat_fdm];



Child_quene_fdm_top:
SQL Select date
	,child_quene_cnt as child_quene_cnt_1
	,unit_id as unitID
	,pref_date_year as pref_date_year_1
    ,pref_date_month as pref_date_month_1
FROM AnalitDB.edu.v_KG_Children_quene_first_day
where date = '2020-07-01';


Child_quene_allday:
SQL SELECT [date]
      ,[child_quene_cnt] as child_cnt_allday
      ,[unit_id] as unitID
      ,[age_status] as age_fdm_1
      ,[q_status] as q_status_fdm
  
from [AnalitDB].[edu].[v_KG_Children_quene_alldays] 
where [date] >= '2019-12-31';


Child_visit_fdm:
SQL Select date,
      unit_id as unitID,
      [child_visitng] as cv_fdm,
      [free_places] as free_place_fdm,
      [work_type_id] as gst_id_fdm
FROM AnalitDB.edu.v_KG_Child_visiting_group
where [date] >= '2019-12-31';

Child_visit_alldays:
SQL Select date,
      unit_id as unitID,
      [child_visitng] as cv_alldays,
      [max_count] as max_count_alldays,
      [free_places] as free_place_alldays,
      [work_type_id] as gst_id_alldays
FROM AnalitDB.edu.[v_KG_Child_visiting_group_alldays]
where [date] >= '2019-12-31';




Child_visit_by_priv:
SQL Select date,
      unit_id as unitID,
      [child_visitng] as cv_by_priv,
      [ch_priv_stat] as stat_by_priv
FROM AnalitDB.edu.v_KG_Child_visiting_priv
where [date] >= '2019-12-31';


Child_visit_by_change:
SQL Select date,
      unit_id as unitID,
      [child_cnt] as child_fdc
FROM AnalitDB.edu.[v_KG_Child_change]
where [date] >= '2019-12-31';



Child_quene_source:
SQL Select create_date as date,
      child_cnt as child_s_cnt,
      unit_id as unitID,
      source_id
FROM [AnalitDB].[edu].[v_KG_Source]
where [create_date] >= '2019-12-31';




Child_quene_age:
SQL Select [date] as date,
      [child_cnt] as child_age_cnt,
      [unit_id] as age_by_create,
     [age_by_create_declaration_day] as age_bcd
FROM [AnalitDB].[edu].[v_KG_Child_age_by_create]
where [date] >= '2019-12-31';
  

Declaration_total_priv:
SQL Select child_cnt as [total_decl_cnt]
      ,[date]
      ,[unit_id] as unitID
      ,[priv_status] as priv_status1
FROM [AnalitDB].[edu].[v_KG_Child_priv]
where [date] >= '2019-12-31';


Entity_unit:
SQL Select [legal_id]
      ,[id] as unitID
FROM [AnalitDB].[dbo].[edu.KG_entity];


Wishing_unit:
SQL SELECT [date]
      ,child_cnt as child_wish
      ,unit_id as unitID
  FROM [AnalitDB].[edu].[KG_Children_wishing_unit];


Visiting_priv:
SQL SELECT [date]
      ,[child_visitng] as ch_vistiting_priv
      ,unit_id as unitID
      ,[ch_priv_stat]
  FROM [AnalitDB].[edu].[KG_Children_visitng_by_priv];


Children_priv:
SQL SELECT [date]
      ,[cnt_child] as child_priv
      ,[mo_id] as unitID
      ,[privilege_id] 
      ,[age] as age_priv
  FROM [AnalitDB].[edu].[KG_Children_privilege];

Children_priv_dict:
SQL SELECT  [id] as [privilege_id] 
      ,[name] as priv_name
FROM [AnalitDB].[edu].[KG_Privilege];






LastUpload:
select lastRun from struct.x_tasks where name = 'ЭДС_load_declarations';








QUALIFY *;
types:
LOAD * INLINE [
type, pos
' ', 1
'  ', 3
'    ', 4
'   ', 2
];
